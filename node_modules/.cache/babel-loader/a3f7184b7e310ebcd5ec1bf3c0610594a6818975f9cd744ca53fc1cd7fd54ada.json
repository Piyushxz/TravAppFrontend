{"ast":null,"code":"var _jsxFileName = \"D:\\\\travelappfrontend\\\\src\\\\context\\\\filter-contest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useReducer } from \"react\";\nimport { filterReducer } from \"../reducer/filter-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  isFilterModalOpen: false\n};\nconst FilterContext = /*#__PURE__*/createContext(initialValue);\nconst FilterProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(filterReducer, initialValue);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(FilterProvider, \"5a2Qc6Zzf7GqNFU4fhHZCWFlShs=\");\n_c = FilterProvider;\nconst useFilter = () => {\n  _s2();\n  return useContext(FilterContext);\n};\n_s2(useFilter, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useContext, FilterProvider };\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["useContext","createContext","useReducer","filterReducer","jsxDEV","_jsxDEV","initialValue","isFilterModalOpen","FilterContext","FilterProvider","children","_s","state","dispatch","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFilter","_s2","$RefreshReg$"],"sources":["D:/travelappfrontend/src/context/filter-contest.js"],"sourcesContent":["import { useContext ,createContext, useReducer} from \"react\"\r\nimport { filterReducer } from \"../reducer/filter-reducer\"\r\n\r\nconst initialValue = {\r\n    isFilterModalOpen :false,\r\n\r\n}\r\nconst FilterContext = createContext(initialValue)\r\n\r\n\r\nconst   FilterProvider = ({children}) =>{\r\n\r\n    const [state,dispatch] = useReducer(filterReducer,initialValue)\r\n    return(\r\n        <FilterContext.Provider>\r\n            {children}\r\n        </FilterContext.Provider>\r\n    )\r\n}\r\n\r\nconst useFilter =()=> useContext(FilterContext);\r\n\r\nexport {useContext,FilterProvider}"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAO,OAAO;AAC5D,SAASC,aAAa,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAG;EACjBC,iBAAiB,EAAE;AAEvB,CAAC;AACD,MAAMC,aAAa,gBAAGP,aAAa,CAACK,YAAY,CAAC;AAGjD,MAAQG,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EAEpC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGX,UAAU,CAACC,aAAa,EAACG,YAAY,CAAC;EAC/D,oBACID,OAAA,CAACG,aAAa,CAACM,QAAQ;IAAAJ,QAAA,EAClBA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAAP,EAAA,CAROF,cAAc;AAAAU,EAAA,GAAdV,cAAc;AAUtB,MAAMW,SAAS,GAAEA,CAAA;EAAAC,GAAA;EAAA,OAAKrB,UAAU,CAACQ,aAAa,CAAC;AAAA;AAACa,GAAA,CAA1CD,SAAS;AAEf,SAAQpB,UAAU,EAACS,cAAc;AAAC,IAAAU,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}